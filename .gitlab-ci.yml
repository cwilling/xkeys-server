# Official framework image. Look for the different tagged releases at:
# /https://hub.docker.com/r/library/node/tags
default:
  image: node:lts

variables:
  PACKAGE_VERSION: "0.9.2"
  LINUX_AMD64_INSTALLER: "xkeys-server-${PACKAGE_VERSION}_amd64.deb"
  WINDOWS_INSTALLER: "xkeys-server-installer-${PACKAGE_VERSION}.exe"
  PACKAGE_REGISTRY_URL: "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/xkeys-server/${PACKAGE_VERSION}"

.shared_windows_runners:
  tags:
  - shared-windows
  - windows
  - windows-1809

.macos_saas_runners:
  tags:
    - shared-macos-amd64
  image: macos-11-xcode-12


# Pick zero or more services to be used on all builds.
# Only needed when using a docker container to run your tests in.
# Check out: http://docs.gitlab.com/ee/ci/docker/using_docker_images.html#what-is-a-service
#services:


stages:
  - test
  - package
  - upload

# This folder is cached between builds
# https://docs.gitlab.com/ee/ci/yaml/index.html#cache
#cache:
#  paths:
#    - node_modules/

# Use LTS nodejs
#test_lts:
#  stage: test
#  except:
#    changes:
#      - "*.md"
#      - "./**/*.md"
#      - "./**/**/*.md"
#  before_script:
#    apt-get update -qq && apt-get install -y -qq libudev-dev libusb-1.0-0
#  script:
#    - npm install
#    - ./scripts/xkeys-server.js test
#  interruptible: true

# Use LATEST nodejs
#  image: node:latest
#  stage: test
#  except:
#    changes:
#      - "*.md"
#      - "./**/*.md"
#      - "./**/**/*.md"
#  before_script:
#    apt-get update -qq && apt-get install -y -qq libudev-dev libusb-1.0-0
#  script:
#    - npm install
#    - ./scripts/xkeys-server.js test
#  interruptible: true

# Use LTS nodejs
#test_lts:
#  stage: test
#  except:
#    changes:
#      - "*.md"
#      - "./**/*.md"
#      - "./**/**/*.md"
#  before_script:
#    apt-get update -qq && apt-get install -y -qq libudev-dev libusb-1.0-0
#  script:
#    - npm install
#    - ./scripts/xkeys-server.js test
#  interruptible: true

# Package with LTS nodejs
package_deb_lts:
  stage: package
  image: node:lts
  before_script:
    apt-get update -qq && apt-get install -y -qq libudev-dev libusb-1.0-0
  script:
    - npm install
    - cd build/deb
    - npx pkg -t node16-linux-x64 --out-path application ../..
    - ls -l application/
    - ./make-deb
  rules:
    - when: manual
  interruptible: true
  artifacts:
    paths:
      - build/deb


# Test Windows
# - NodeJS is preinstalled (check version?)
#test_windows:
#  extends:
#  - .shared_windows_runners
#  stage: test
#  except:
#    changes:
#      - "*.md"
#      - "./**/*.md"
#      - "./**/**/*.md"
#  script:
#    - npm install
#    - node .\scripts\xkeys-server.js test
#  interruptible: true
# Test Windows
# - NodeJS is preinstalled (check version?)

package_windows:
  extends:
  - .shared_windows_runners
  stage: package
  before_script:
    - choco install --confirm nsis
  script:
    - npm install
    - cd build/windows
    - npx pkg -t node16-win-x64 --out-path application ../..
    - ls "C:\\Program Files (x86)\\NSIS"
    - '& "C:\\Program Files (x86)\\NSIS\\makensis.exe" xkeys-server-installer.nsi'
    - ls ${WINDOWS_INSTALLER}
  rules:
    - when: manual
  interruptible: true
  artifacts:
    paths:
      - build/windows


# Test macOS (only available in beta program)
#test_macos:
#  stage: test
#  extends:
#    - .macos_saas_runners
#  stage: test
#  except:
#    changes:
#      - "*.md"
#      - "./**/*.md"
#      - "./**/**/*.md"
#  script:
#    - npm install
#    - ./scripts/xkeys-server.js test
#  interruptible: true

upload:
  stage: upload
  image: curlimages/curl:latest
  script:
    - |
      curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file build/deb/${LINUX_AMD64_BINARY} ${PACKAGE_REGISTRY_URL}/${LINUX_AMD64_INSTALLER}
