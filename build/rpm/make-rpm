#!/bin/sh


VERSION=$(python3 -c 'import json,sys; f=open("../../package.json"); obj=json.load(f);print(obj["version"])')
ARCH=${ARCH:-$(uname -m)}

if [ "${ARCH}" = "x86_64" ]; then
  BUILD_ARCH=x64
else
  echo "$ARCH is not supported"
  exit 1
fi

# Work in the correct directory
cd $(dirname $0)
CWD=$(pwd)

#       Step 1 - create an executable in the "application" directory
#
npx pkg -t node12-linux-$BUILD_ARCH --out-path application ../..
echo "Added: $(file application/*)"

rm -rf xkeys-server-${VERSION}*
mkdir xkeys-server-${VERSION}
cp -p application/xkeys-server xkeys-server-${VERSION}/
sed -e "s/%ARCH%/${ARCH}/" -e "s/%NOGROUP%/nobody/" ../xkeys-server.service > xkeys-server-${VERSION}/xkeys-server.service
cp -p ../50-xkeys.rules xkeys-server-${VERSION}/
cp -p ../50-elgato.rules xkeys-server-${VERSION}/
tar zcvf xkeys-server-${VERSION}.tar.gz xkeys-server-${VERSION}

rm -rf ~/rpmbuild
mkdir -p  ~/rpmbuild/{BUILD,RPMS,SOURCES,SPECS,SRPMS}

mv xkeys-server-${VERSION}.tar.gz ~/rpmbuild/SOURCES
sed -e "s/%%VERSION%%/$VERSION/" xkeys-server.spec.in > ~/rpmbuild/SPECS/xkeys-server.spec

rpmbuild -ba ~/rpmbuild/SPECS/xkeys-server.spec

[ "$?" ] &&  echo "Package should be available at ~/rpmbuild/RPMS/x86_64/xkeys-server-$VERSION-1.x86_64.rpm"

